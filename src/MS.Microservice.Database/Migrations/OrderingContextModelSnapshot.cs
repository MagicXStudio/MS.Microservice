// <auto-generated />
using System;
using MS.Microservice.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MS.Microservice.Database.Migrations
{
    [DbContext(typeof(OrderingContext))]
    partial class OrderingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MS.Microservice.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2020, 6, 28, 13, 5, 38, 418, DateTimeKind.Unspecified).AddTicks(8819), new TimeSpan(0, 8, 0, 0, 0)));

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("OrderName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5,3)");

                    b.Property<DateTimeOffset?>("UpdationTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("tb_orders");
                });
#pragma warning restore 612, 618
        }
    }
}
